[GENERAL]
Version=101
MANUALOK=0
ABMELDEN=0

; Load the Logo file - make sure to scale it correctly to 592x200 and have a transparent background!
;Set the topleft (start-screen only) logo file:
SoftwareDeveloperLogo=graphics\rexroth.png

; Load the customer logo file
; !! NOTE: this is now done in config.lua
; LogoFile=graphics\custom-logo.png

; Billboard webbrowser URL
; Setup the URL or the path of a webpage to load into the start page web control. Use the 
; full URI/URL as with internet explorer (i.e. include the file:// or http:// prefix).
; If you use a file://prefix, make sure to use the full path *and* forward slashes!
; Note:
; - use one of BillboardURL (to specify a full URL with http:// or file:// prefix) 
;   or BillboardPath (to directly specify a html file using a relative path)
; - if both are given, the BillboardPath will take precedence
; - if file/url is not found/given, then the webbrowser will be hidden
; !! NOTE: this is now done in config.lua
;;;BillboardUrl=file://D:/Projekte/Kundenprojekte/Triumph/src/ww_hh - Triumph/bin/debug/billboard/index-he-02.html
;;;BillboardPath=billboard/index-he-02.html
;;BillboardUrl=http://www.bbc.com/
;BillboardPath=billboard/scrolling_stars/index.html

; Define the behaviour for auto-reloading the billbord. 
; If BillboardAutoReload is missing or set to zero, then the billboard is never auto-reloaded.
; If BillboardAutoReload is set to non-zero, the initial URL is reloaded each time the start view
;    is shown (i.e. after a process has finished) 
BillboardAutoReload=1

; Define and set to "donotcheck" to disable database service instance name check
; If set to <InstanceName>, uses SCM to query the db service status during startup.
; If missing or set to an empty value, check for "INTERBASESERVER" or "FirebirdServerDefaultInstance"
; database services.
DBInstance=donotcheck

; Define the global NOK strategy
NOK_STRATEGIE=0
;0 = (default) stay on bolt and automatically select a loosening program after a NOK 
;    rundown. In this case the application automatically selects a configured loosen 
;    tightening program (e.g. prg #47) after a NOK rundown. This allows the operator 
;    to immediately loosen a bolt after a NOK rundown without the need to enable CCW 
;    operations (and without the operator switching the CW/CCW switch to CCW) – thus 
;    increasing the process security. Note that the operator still needs to acknowledge 
;    the NOK rundown (if enabled in the tools configuration) before he can start the 
;    loosening operation. Note also that the program used for the loosening operation 
;    must be defined in the “tool configuration” section of the configuration editor
;    Note that manual loosen on the tool (by using the CCW switch) is disabled in this
;    mode. 
;1 = skip bolt after a NOK rundown. In this case the current bolt is marked NOK and the 
;    job continues immediately with the next bolt.
;2 = stay on bolt after NOK rundown. In this case the job re-enables the tool after a 
;    rundown, but stays on the current bolt. The next is only automatically selected 
;    after a OK rundown 

QUICK_PROCESSING=1
; If enabled, then after scanning a serial number, the tool gets enabled immediately. 
; If not enabled, then the operator must manually press the “tighten” button to start 
; a job and enable the tool for the first bolt. He also must press the “finish” button
; to finalize the process. 
; Allowed values are: 
;  0 = disabled (operator must press a button to start and finalize processing) 
;  1 = enabled 

STATION=0
; This defines the station number. If a multi-station setup is used, the station number 
; defines the actual jobs and bolts relevant for the current station. This allows 
; keeping a central configuration database with all operations for multiple stations. 
; Allowed values are: 
;  0 = no multi-station operation or rework station (access to all jobs and bolts defined 
;      in the configuration) 
;  Valid station number: station number for this installation.

STATION_NAME=OGS2

PART_CHOICE_THROUGH_BARCODE=1
; (optional, default = 0): If enabled, the (sub-)parts can be selected by scanning a 
; part barcode. Note that this requires configuring a barcode for a part in the 
; configuration. 
; Allowed values are: 
;  0 = disabled 
;  1 = enabled 

;DBHost=10.0.0.27:D:\src\projects\Werkerfuehrung\ww_hh_build-trunk\ww_hh\bin\debug\Tables\station.fdb 
;DBHOST=D:\src\projects\Werkerfuehrung\images\TSKE-Image\Werkstattwagen\Tables

CHECK_LIMITS = 0
; (optional, default = 0): If enabled, then "plausibility checks" are enforced.
; OGS will then compare each tool result against the set plausibility limits (defined
; in the GUI editor in the operation definition). If the tool result is out of
; limits, the result will get marked NOK even if the tool reports OK.
; Basically this can be used to verify correct tool parameter settings.
; Allowed values are: 
;  0 = disabled 
;  1 = enabled 

LANGUAGE=en
; Set GUI language to use. If not set, then operating system defaults (i.e.
; windows user context) is used.

;
; If Operator finishes a part processing, should be part result archived in Database?
; SKIP - (default) do not archive part result (keep it in database as not completed)
; SAVE - archive part result ((keep it in database as archived))
; ASK  - ask operator if part result file has to be archived or not
Result_OK=SAVE
Result_NOK=ASK
Result_incomplete=SKIP
;Result_incomplete=ASK
;  
; Behavior when receiving of the already processed serial number (archived part result):
; Choise 1: continue processing  (overwrite previous results) 
; Choise 2: start processing with the same serial number (new instance in Database)
; CONTINUE  - always Choise 1 (default)
; ASK_IF_OK - ask operator what to do if previous processing was successfully completed, else Choise 1
; NEW_IF_OK - always deletes the old result and creates a new one (only for testing!)
; ASK       - always ask operator 
REWORK=NEW_IF_OK

; Behavior when program "Loosen" starts automatically after NOK (NOK_STRATEGIE=0)
; =1  - show warning: "N.I.O.  Caution!  next start:  Loosen"
; =0  - no warning 
SHOW_WARNING=1

; Behavior while input of action barcode
; =1  - show popup to enable manual input of action barcode 
; =0  - do not show popup. Input only via barcode scanner is possible 
SHOW_ACTION_BARCODE_POPUP=0


; Display "Action description" for the current operation on the tool (on the tool display)
; if it is configured in "Configurator guidance editor" and supported by the tool/driver.
; Currently only supported for Nexo!
SHOW_INFO_TEXT=0

;Upload only own jobs
;0 -Show all Jobs defined in the database (even those not configured for the current Station):
;1 -Show only Jobs defined for use with the current station:
HIDE_FOREIGN_JOBS=1

; Date/Time format string (see details in "date-time format string.txt")
DATE_TIME_FMT= dddd D mmmm yyyy, hh:mm AM/PM

; Delay before auto hide warning (in seconds)
; if value = 0, then it will be hidden only after manual acknowledge
HIDE_WARNING_DELAY=4 

; Show popup for manual operations or not
; =1  - Do not show popups. This can be overridden on a per operation base by prefixing
;       the action text with a plus sign ('+').
; =0  - (default) show the popup.
DISABLE_MANUALOP_POPUP=1

; Path to the onscreen keyboard
OSK_EXE="C:\Program Files (x86)\Common Files\microsoft shared\ink\tabtip32.exe"


; ____________________________________________________________________________________
[SCREEN]
; Set the initial display to show the application - most useful on multi-monitor setups. 
; If not defined, then application starts on the "default" screen
;InitialDisplay=2

; To workaround rendering issues with some graphic drivers, you can
; define a fixed renderer here. If not given or unknown, then defaults
; to auto-selection of the renderer. 
; Allowed renderers are (case sensistive!):
; - GDI				(sidabled Direct2D and uses GDI+ instead)
; - DX10Software	(uses the WARP software rasterizer even with harware support)
; - GPUCanvas		(uses hardware acceleration, this is the default)
;
;RenderFix=GPUCanvas
;RenderFix=DX10Software

; ____________________________________________________________________________________
[CLEANUP]
; cleanup of the local database "Station.fdb"
; Set Enable to 1 to enable  cleanup. If set to zero, old data is **never** deleted 
; from the database
Enable=1

; ArchivedTimeout [days]: defines number of days to keep already archived parts in 
; the database. By default this is 7 days.
ArchivedTimeout=7

; UnFinishedTimeout [days]: defines number of days to keep non-archived (NOK or not 
; completed) parts in the database. By default this is 14 days 
UnFinishedTimeout=14

; ___________________________________________________________________________________
[CHART]
Width=1000
Height=500
MaxAngle=10000
CrvRoot=C:\Bosch

[PRINTER]
ENABLED=0
; 0 = Drucken, 1 = PDF erzeugen
Mode=0

[XML]
;DIRECTORY=D:\Daten_Temp


; ___________________________________________________________________________________
;
; [SERIAL] Serial port communication setup.
;
; Known devices are:
;   Barcode       Serial/USB Barcode reader (expected CR at end)
;   Barcode_Rfid  RFID reader
;   SocketTray    socket tray connected over USB<=>COM cable
;   Euchner       Euchner EKS keyfob reader connected over USB/COM
;
; Note that all data provided by the serial port devices is routed through
; lualib/barcode_base.lua and <custom>/barcode.lua, so this can be used to
; validate, modify and route the data (e.g. use a RFID reader as user logon by
; forwarding data read to the lualib/user_manager_base.lua or <custom>/user_manager.lua).
; 
[SERIAL]
Barcode			  =	COM7 9600,n,8
Barcode_Rfid	=	COM6 9600,n,8
SocketTray 		=	COM3 115200,e,8|halbduplex


; ___________________________________________________________________________________
;
; SignalR is used to send/receive ID codes through the network (instead or in 
; combination with a barcode reader).
;
[SignalR]
ENABLED=0
URL=http://172.23.56.101:8999
HUB=MyHub
; 0-7: SignalR default trace levels
; 0x08: SignalR state changes
; 0x10: SignalR trace info
TraceLevel=1
; StationID - if not set, defaults to [GENERAL] Station_Name
;StationID=SignalR StationID
StationID=21


; ___________________________________________________________________________________
;
; [SocketTray] Socket tray setup
;
; This section defines the socket tray usage and parameters. There are currently
; three types of socket trays:
; - USB/Serial tray: Automatically used, if parameter IP is missing. The serial
;   parameters are defined through the [SERIAL] section above.
; - Ethernet tray: Parameter IP defines the IP addres, parameter PORT must be 502 
; - Wifi tray: Parameter IP defines the IP addres, parameter PORT must be 5003
;
; See the manual on how to setup "Map", "Groups" and "Group_to_Channel".
; 
[SocketTray]
ENABLED = 0
Groups = 4
Map = 1 2 3 4
;
; Ethernet/LAN/WizNet trays use port 502
;   IP=10.10.2.180
;   PORT=502
; WIFI Tray uses port 5003
;   IP=10.10.2.88
;   PORT=5003


; ===================================================================================
; Tool and Channel definitions
; ===================================================================================
; Notation used for comments
; [<section>]          Refers to a section in this files
; <variable>           Refers to a variable
;
; Terms used
; <dllname>            Refers to the full name of a tool driver dll, e.g. "OPConn.dll"
; <driver>             Refers to the driver name, e.g. for "OPConn.dll", this is "OPENPROTO"
; Note that for "old" tool driver DLLs, each DLL defines a specific driver name,
; such that the DLL <dllname> reads a [<driver>] section in this configuration file.

; ----------------------------------------------------------
; The [TOOL_DLL] section defines the tool driver DLLs to be loaded during 
; startup of OGS.
; The Syntax is <dllname>=<value> with <value>=1 to load the DLL
; Notes:
; - each DLL can be used to connect multiple tools of the same interface, an
;   instance is later referred to as "channel" (see sections [CHANNELS] below.
; - global parameters or the DLL can be set in the [<dllname>] section
; 
[TOOL_DLL]
;OPConn.dll=1            ; Open Protocol driver, driver = "OPENPROTO"
;MBLightCli.dll=1       ; Modbus Pick2Light tool, driver = "Pick2Light"
;EXAConnecT.dll=1       ; Bosch ExaConnect BT tightening tools, driver = "EXAConnecT_FordOpen"
;heGWK.DLL=1            ; GWK electronic torque wrench, driver = "GWK"
;ProfiFTP.dll=1         ;
;heFreedom3.dll=1       ; SCS Freedom3 electronic torque wrench, driver = "FREEDOM"
;MBToolCli.dll=1        ; Modbus tool, uses "new" configuration
heLuaTool.dll=1         ; Generic LUA scripting tool, uses "new" configuration

; ----------------------------------------------------------
; Driver parameters - global
; Tool DLL specific (global) settings
; Each <dllname> uses a section [<dllname>] here.
[MBLightCli.dll]
;[MBToolCli.dll]
[heLUATool.dll]
[OPConn.dll]

; ----------------------------------------------------------
; The [CHANNELS] section defines the list of tools available in the OGS system.
; Note that this section is only used for the "new" tool driver DLLS, the "old"
; tool driver DLLs use the CHANNEL_<channel>_<parameter>=<value> syntax in the
; [<driver>] section (e.g. "OpCon.dll" uses section [OPENPROTO]).
; This links drivers, channels and tools, the syntax is as follows:
;    <channel-number>=<tool section name>
;
; The channel specific parameters are then defined in the [<tool section name>]
; section of this file. 
[CHANNELS]

;3=Pick2Light
7=LuaTool_SYNC
8=LuaTool_GUI2
10=LuaTool_GUI
;11=LuaTool_MBCLI_OGS
;12=ROBOT-P2L



; ===================================================================================
; Tool parameters
; ===================================================================================

; ___________________________________________________________________________________
;[ModbusTool]
;DRIVER=MBToolCli
;CONN_ADDR=10.10.2.15
;CONN_PORT=502

; ___________________________________________________________________________________
[LuaTool_MBCLI_OGS]
DRIVER=heLuaTool
; NOTE: for custom LUA tools implemented through "heLuaTool", the LUA script
;       file used to provide the implementation of the tool interface is 
;       identified through the "TYPE" set here.
; To use the TYPE=MODBUS_CLIENT, you should also add "lua_tool_mbcli" in config.lua
TYPE=MODBUS_CLIENT
CONN_ADDR=192.168.1.98
CONN_PORT=502
; ---- Init Register ----
; This is the initialisation 4x02006 register for the Modbus device. 
; It needs to be written to once when first contact is established or 
; once on re-acquisition of contact. This clears any latched watchdog 
; fault on the I/O block and allows it autonomously to set outputs 
; to 0 when comms is lost.
; NOTE: Init is *always* done through FC "Write single register"
; NOTE: if INIT_REG is missing or = 0, then no init is done.
INIT_REG_ADDR=8000
; On Rexroth this clears the latched fault and resets the block. Other vendors 
; use other settings.
INIT_REG_VAL=6
; ---- Tool Status and Control Register ----
; Cyclic I/O for Status/Command
; Note that the following registers (holding registers, 4x) are cyclically 
; read/written through FC23 (read/write multiple registers). 
STATUS_REG_ADDR=8100
CONTROL_REG_ADDR=8001
; ---- Program Number Register ----
; The register is in the holding register range (4x).
PROGRAM_REG_ADDR=8002
; ---- ID-Code Register ----
; The register is in the holding register range (4x). Note that the length is 
; in words (i.e. register count), so a length of 20 maps to 40 characters
IDCODE_REG_ADDR=8004
IDCODE_REG_LENGTH=64
; ---- Result Data Register ----
; The register is in the holding register range (4x). Note that the number of   
; modbus registers is actually  twice the number of measurement values, as
; each value is represented in a 32-bit value (two modbus registers for each value)
RESULT_REG_ADDR=8102
; Length in Bytes
RESULT_REG_LENGTH=42
; NIDEC specific extension to the LUA-MBCli tool: read CSV file at each
; start of the workflow to read additional parameters - which will be
; sent over modbus to the tool.
; The CSV_BASE_PATH defines the folder where to look for the <partid>.csv file.
CSV_BASE_PATH=c:\flatfile


; ___________________________________________________________________________________
[LuaTool_SYNC]
DRIVER=heLuaTool
; NOTE: for custom LUA tools implemented through "heLuaTool", the LUA script
;       file used to provide the implementation of the tool interface is 
;       identified through the "TYPE" set here.
; To use the TYPE=SYNC, you should also add "lua_tool_sync" in config.lua
TYPE=SYNC
; SignalR tracelevel to use:
TRACELEVEL=31
; SignalR hub URL
URL=http://192.168.1.103:8080
; SignalR hub name
HUB=MyHub2


; ___________________________________________________________________________________
[LuaTool_GUI]
DRIVER=heLuaTool
; NOTE: for custom LUA tools implemented through "heLuaTool", the LUA script
;       file used to provide the implementation of the tool interface is 
;       identified through the "TYPE" set here.
; To use the TYPE=GUI_INP, you should also add "lua_tool_gui" in config.lua
TYPE=GUI_INP
; Additional settings required by "lua_tool_gui.lua"
MUMU=ssfgsafg
KUKU=25
IP=192.168.1.102
PORT=9999
; ___________________________________________________________________________________
[LuaTool_GUI2]
DRIVER=heLuaTool

TYPE=GUI_INP2

IP=192.168.1.102
PORT=9999

; ___________________________________________________________________________________
[Pick2Light]
DRIVER=MBLightCli
CONN_ADDR=192.168.1.112
CONN_PORT=502
; This is the initialisation 4x02006 register for the Modbus device. 
; It needs to be written to once when first contact is established or 
; once on re-acquisition of contact. This clears any latched watchdog 
; fault on the I/O block and allows it autonomously to set outputs 
; to 0 when comms is lost.
; NOTE: Init is *always* done through FC "Write single register"
; NOTE: if INIT_REG is missing or = 0, then no init is done.
INIT_REG=2006
; On Rexroth this clears the latched fault and resets the block. Other vendors 
; use other settings.
INIT_VAL=6
; Cyclic I/O
; Note that the following registers (holding registers, 4x) are cyclically 
; read/written through FC23 (read/write multiple registers). Note also, that 
; the IOs are bit-mapped, i.e. Bit 0 = Reg[0].0, Bit 17 = Reg[1].1, ... 
; The tool parameter (in the config) is a "Program number". The "program number" 
; actually is the "bin number" of the pick 2 light system. Bits start a 0, 
; so do the bins - Prg 0 --> Bin 0 --> Modbus reg[0].0
INPUT_REG_START=8000
INPUT_REG_LENGTH=1
OUTPUT_REG_START=8001
OUTPUT_REG_LENGTH=1
; If INPUT_ACK_ALL is >= 0, then the given bit is used as a global ACK value. 
; This is treated identically to a bin, so it might need an additional digital 
; input module.
; Default: -1 (if missing or empty), i.e. disabled.
INPUT_ACK_ALL=3
; Set to non-zero to make the requests output flash at 1Hz
OUTPUT_FLASH=1


; ___________________________________________________________________________________
[ROBOT-P2L]
DRIVER=MBLightCli
CONN_ADDR=192.168.1.98
CONN_PORT=502
INPUT_REG_START=8199
INPUT_REG_LENGTH=1
OUTPUT_REG_START=8099
OUTPUT_REG_LENGTH=1
OUTPUT_FLASH=0


; ___________________________________________________________________________________
[FREEDOM]
;CHANNEL_02=S0100B710338
;PORT=3456


; ___________________________________________________________________________________
;
; [OPENPROTO] Parameters for OpenProtocol tools
;
; Note that the [OPENPROTO] defines two different sets of parameters:
; - global parameters for the open protocol driver (all parameters not
;   prefixed by "Channel"
; - channel specific parameters (prefixed by "channel")
;
[OPENPROTO]
; enable external I/O exchange on [OP2.1 ... OP4.0] inputs 
; OP2.1 and OP2.2 are already occupied (ActEn and CcwLock)
; minimal valid offset is  2. 
; set 0 (default) to disable external I/O exchange
;EXTERNAL_IO_OFFSET=7
; Poll cycle time in ms
;Tact=10


CHANNEL_01=192.168.1.72
CHANNEL_01_MANUAL_OPPRG=90
CHANNEL_01_TYPE=NEXO
;CHANNEL_01_ALIVEXMTT=500
;CHANNEL_01_SHOWALIVE=0
;CHANNEL_01_RSPTIMEOUT=10000
;CHANNEL_01_PORT=4545
; parameter 'CHECK_EXT_COND'
; 0 (default) - do not check external conditions (socket tray) to enable/disable
;               a tool if tightening process is already started
; 1 - force to check external conditions even though the tool is in cycle
;CHANNEL_01_CHECK_EXT_COND=0


;CHANNEL_02=192.168.1.199
CHANNEL_02_MANUAL_OPPRG=90
CHANNEL_02_TYPE=CS351


;CHANNEL_04=192.168.1.44
;CHANNEL_04_MANUAL_OPPRG=90
CHANNEL_04_PORT=4545
;CHANNEL_04_TYPE=CRANE
CHANNEL_04_PARAMS=3
CHANNEL_04_ALIVEXMTT=5000
CHANNEL_04_RSPTIMEOUT=10000



;CHANNEL_06=192.168.1.73
CHANNEL_06_MANUAL_OPPRG=90
CHANNEL_06_TYPE=NEXO


; ___________________________________________________________________________________
; Exaconnect BT tools
[EXAConnecT_FordOpen]
;CHANNEL_05=10.10.2.10
;CHANNEL_05_PORT=4545
;CHANNEL_05_ALIVEXMTT=5000
;CHANNEL_05_SHOWALIVE=0
;CHANNEL_05_RSPTIMEOUT=10000
;Tact=10
;PORT=4545

; ___________________________________________________________________________________
; GWK torque wrenches
[GWK]
; serial connection
;CHANNEL_04=COM11 9600,n,8|halbduplex
; TCP connection
;CHANNEL_12=10.23.232.105

;CHANNEL_06=10.10.2.170
;CHANNEL_06_PORT=4002

;Tightening parameter set
; defaults:   Target=T; CW;  Loosen=0.0;
PRG_01 = name=Prg1; Target=A; Snug=1.0; Loosen=12.0; A=45; A-=20.00; A+=60; T-=2.5; T+=10.2; CW; Curve;
PRG_02 = name=GETRIEBEKOPF_2; Target=T; Snug=0.5;  A-=50; A+=1000; T-=1; T=2; T+=3; CW;
PRG_03 = name=GETRIEBEKOPF_3; Target=A; CW; Snug=5.0; A=60; A-=40; A+=80.00; T-=6.0; T+=10.0; Loosen=12; Curve;
PRG_04 = name=GETRIEBEKOPF_4; Target=A; CW; Snug=5.0; A=60; A-=40; A+=80.00; T-=6.0; T+=10.0; Loosen=12; Curve;

;Tact=100


; ___________________________________________________________________________________
;
; FTP client settings
;
[FTP_CLIENT]
ENABLED=1

HostIP=127.0.0.1
HostPort=21
 
ReportSkippedOperations=0

; In case of Sys3xxGateway(Qtrans) as FTP server:
;  - use "Username=sys3xx" and "Password=sys3xx"
;  - TargetFolderOnHost is not needed (ignored)
; In case of conventional FTP Server:
;  - TargetFolderOnHost parameter is obligatory 
Username=sys3xx
Password=sys3xx
;TargetFolderOnHost=FTP-RESULTS

; intermediate buffer for FTP telegrams on FTP Client site
DIRECTORY=C:\FTP

; Channel info in JSON format
; IP address for manual operations or for tools connected via serial port/USB can be station IP: 
CHANNEL_03_INFO={ "ChannelName": "OGS|PICK2LIGHT", "location name": ["", "", "", "", "", "", ""] }
CHANNEL_04_INFO={ "IP": "192.168.1.44", "ChannelName": "OGS|CRANE", "location name": ["", "", "", "", "", "", ""] }
CHANNEL_05_INFO={ "IP": "192.168.1.101", "ChannelName": "OGS|HID1", "location name": ["", "", "", "", "", "", ""] }
CHANNEL_07_INFO={ "IP": "192.168.1.101", "ChannelName": "OGS|SYNC", "location name": ["", "", "", "", "", "", ""] }
CHANNEL_08_INFO={ "IP": "192.168.1.101", "ChannelName": "OGS|GUI2", "location name": ["", "", "", "", "", "", ""] }
CHANNEL_10_INFO={ "IP": "192.168.1.101", "ChannelName": "OGS|GUI",  "location name": ["", "", "", "", "", "", ""] }
CHANNEL_11_INFO={ "IP": "192.168.1.98", "ChannelName": "OGS|PLC", "location name": ["", "", "", "", "", "", ""] }
CHANNEL_12_INFO={ "IP": "192.168.1.98", "ChannelName": "OGS|PLC-P2L", "location name": ["", "", "", "", "", "", ""] }

; ___________________________________________________________________________________
;
[USER]
; Define logins
; Format: 
;	<username>=<password>[,<userlevel>]
; If <userlevel> is omitted, 1 is used as default.
; Allowed userleves are 1=Operator, 2=Supervisor, 3=Administrator
; The <username> "autologon" is specially treated, and must follow
; the format:
; 	autologon=<username>
; If autologon is available and a non-empty username is given, then an
; operator with the given <username> is logged on (userlevel is always = 1).
;
;  first parameter:  pass, second: level,  third: RFID code
autologon=Stuart Williams

Contractor_085=password,1,H9AA1D310
Bill Hicks=password,3,HFFF1C410
Stuart Williams=password,3,U5200533509
John Wayne=password,1,H7D784310
Tom Jones=password,1,HB004FA1D
99=99,3,88888888
Haydn Barker=password,3,12345678

test1=test1,1,10010001
test2=test2,2,10010002
test3=test3,3,10010003

RED=red,3,U40003ACC4D
BLUE=blue,2,UA1008DB131
YELLOW=yellow,1,U40001AC01D
TRIUMPH=triumph,3,HAFA6D310

il=il,3,NNßUK2A

